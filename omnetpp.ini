[General]
network = DiffservNetwork
sim-time-limit = 1250s
#cmdenv-express-mode = false

**.result-recording-modes =
**.scalar-recording = true
debug-statistics-recording = true

# default queues
**.queueType = "DropTailQueue"
**.queue.frameCapacity = 100
**.queue.dataQueue.frameCapacity = 100

[Config Apps]
**.H{1..8}.numUdpApps = 2 # 0 = voice, 1 = video
**.H{9..11}.numUdpApps = 2 # 0 = voice, 1 = video

# voice streaming
**.H{1..4}.udpApp[0].typename = "UDPBasicBurst"
**.H{9..11}.udpApp[0].typename = "UDPBasicBurst"
**.H1.udpApp[0].destAddresses = "H5"
**.H2.udpApp[0].destAddresses = "H6"
**.H3.udpApp[0].destAddresses = "H5"
**.H4.udpApp[0].destAddresses = "H7"
**.H9.udpApp[0].destAddresses = "H8"
**.H10.udpApp[0].destAddresses = "H7"
**.H11.udpApp[0].destAddresses = "H7"
**.H{1..4}.udpApp[0].chooseDestAddrMode = "once"
**.H{1..4}.udpApp[0].destPort = 2000
**.H{1..4}.udpApp[0].startTime = uniform(1s,2s)
**.H{1..4}.udpApp[0].stopTime = 1200s
**.H{1..4}.udpApp[0].messageLength = 172B # 160B voice + 12B RTP header
**.H{1..4}.udpApp[0].burstDuration = exponential(0.352s)
**.H{1..4}.udpApp[0].sleepDuration = exponential(0.650s)
**.H{1..4}.udpApp[0].sendInterval = 20ms

**.H{9..11}.udpApp[0].chooseDestAddrMode = "once"
**.H{9..11}.udpApp[0].destPort = 2000
**.H{9..11}.udpApp[0].startTime = uniform(1s,2s)
**.H{9..11}.udpApp[0].stopTime = 1200s 
**.H{9..11}.udpApp[0].messageLength = 172B # 160B voice + 12B RTP header
**.H{9..11}.udpApp[0].burstDuration = exponential(0.352s)
**.H{9..11}.udpApp[0].sleepDuration = exponential(0.650s)
**.H{9..11}.udpApp[0].sendInterval = 20ms

**.H{5..8}.udpApp[0].typename = "UDPBasicBurst"
**.H{5..8}.udpApp[0].localPort = 2000
**.H{5..8}.udpApp[0].delayLimit = 0ms

**.H{5..8}.udpApp[0].destAddresses = ""
**.H{5..8}.udpApp[0].chooseDestAddrMode = "once"
**.H{5..8}.udpApp[0].destPort = 0
**.H{5..8}.udpApp[0].messageLength = 0B
**.H{5..8}.udpApp[0].burstDuration = 0s
**.H{5..8}.udpApp[0].sleepDuration = 0s
**.H{5..8}.udpApp[0].sendInterval = 0ms

# video streaming
**.H{1..4}.udpApp[1].typename = "UDPBasicApp"
**.H{1..4}.udpApp[1].destPort = 1000
**.H{1..4}.udpApp[1].startTime = uniform(1s,2s)
**.H{1..4}.udpApp[1].stopTime = 1200s
**.H{1..4}.udpApp[1].sendInterval = 40ms
**.H{1..4}.udpApp[1].messageLength = 500B

**.H{9..11}.udpApp[1].typename = "UDPBasicApp"
**.H{9..11}.udpApp[1].destPort = 1000
**.H{9..11}.udpApp[1].startTime = uniform(1s,2s)
**.H{9..11}.udpApp[1].stopTime = 1200s
**.H{9..11}.udpApp[1].sendInterval = 40ms
**.H{9..11}.udpApp[1].messageLength = 500B


**.H1.udpApp[1].destAddresses = "H5"
**.H2.udpApp[1].destAddresses = "H6"
**.H3.udpApp[1].destAddresses = "H5"
**.H4.udpApp[1].destAddresses = "H7"
**.H9.udpApp[1].destAddresses = "H8"
**.H10.udpApp[1].destAddresses = "H7"
**.H11.udpApp[1].destAddresses = "H7"

**.H{5..8}.udpApp[1].typename = "UDPSink"
**.H{5..8}.udpApp[1].localPort = 1000

#
# Experiment 1
#

[Config Exp1]
**.edgeDatarate = 500kbps
**.coreDatarate = 500kbps

**.R?.eth[*].ingressTCType = "TC1"
**.ingressTC.numClasses = 4
**.ingressTC.classifier.filters = xmldoc("filters.xml", "//experiment[@id='default']")
**.ingressTC.marker.dscps = "AF11 AF21 AF31 AF41 BE"

**.R?.ppp[*].queueType = "DSQueue1"
**.R?.ppp[*].queue.frameCapacity = 100

# statistics
**.H{1..4}.udpApp[*].sentPk.result-recording-modes = count
**.H{5..8}.udpApp[*].rcvdPk.result-recording-modes = count
**.H{5..8}.udpApp[*].endToEndDelay.result-recording-modes = vector # for computing median
**.R2.ppp[2].**Queue.rcvdPk.result-recording-modes = count
**.R2.ppp[2].**Queue.dropPk.result-recording-modes = count
**.R2.ppp[2].**Queue.queueLength.result-recording-modes = timeavg
**.R2.ppp[2].**Queue.queueingTime.result-recording-modes = vector # for computing median
**.udpApp[*].sentPk*.scalar-recording = true
**.udpApp[*].rcvdPk*.scalar-recording = true
**.udpApp[*].endToEndDelay*.scalar-recording = true
**.R2.ppp[2].**Queue.*.scalar-recording = true
**.afQueue.*.scalar-recording = true

[Config Exp11]
extends = Apps, Exp1
**.R?.ppp[*].queue.wrr.weights = "10 9 8 7 0"

[Config Exp12]
extends = Apps, Exp1
**.R?.ppp[*].queue.wrr.weights = "9 8 7 6 0"

[Config Exp13]
extends = Apps, Exp1
**.R?.ppp[*].queue.wrr.weights = "8 7 6 5 0"

[Config Exp14]
extends = Apps, Exp1
**.R?.ppp[*].queue.wrr.weights = "7 6 5 4 0"

[Config Exp15]
extends = Apps, Exp1
**.R?.ppp[*].queue.wrr.weights = "1 1 1 1 0"

[Config Exp16]
extends = Apps, Exp1
**.ingressTC.marker.dscps = "AF11 AF21 AF31 EF BE"
**.R?.ppp[*].queue.wrr.weights = "1 1 1 0 0"

[Config Exp17]
extends = Apps, Exp1

**.queueType = "DropTailQueue"
**.queue.frameCapacity = 400

